{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","nameChangeHandler","e","setState","displayName","target","value","submitData","a","preventDefault","axios","get","state","then","axiosResponse","data","display_name","longitude","lon","latitude","lat","display","catch","alert","onSubmit","this","type","placeholder","onChange","ListGroup","Item","variant","style","height","Image","src","width","rounded","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RA8DeA,EAzDf,kDAEE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZC,YAAaF,EAAEG,OAAOC,SAZP,EAenBC,WAfmB,uCAeN,WAAOL,GAAP,SAAAM,EAAA,sDACXN,EAAEO,iBACFC,IAAMC,IAAN,gGAAmG,EAAKC,MAAMR,YAA9G,iBAAyIS,MAAK,SAAAC,GAE5I,EAAKX,SAAS,CACZC,YAAaU,EAAcC,KAAK,GAAGC,aACnCC,UAAWH,EAAcC,KAAK,GAAGG,IACjCC,SAAUL,EAAcC,KAAK,GAAGK,IAChCC,SAAU,OAEXC,OAAM,SAAApB,GACPqB,MAAM,2BAXG,2CAfM,sDAEjB,EAAKX,MAAQ,CACXR,YAAa,GACba,UAAW,GACXE,SAAU,GACVE,SAAS,GANM,EAFrB,0CAkCE,WAAU,IAAD,OACP,OACE,qCACE,uBAAMG,SAAUC,KAAKlB,WAArB,UACE,uBAAOmB,KAAK,OAAOC,YAAY,gBAAgBC,SAAU,SAAC1B,GAAQ,EAAKD,kBAAkBC,MACzF,iDAEF,eAAE2B,EAAA,EAAF,WACE,cAACA,EAAA,EAAUC,KAAX,CAAgBC,QAAQ,OAAOC,MAAO,CAACC,OAAQ,OAA/C,SAAwDR,KAAKb,MAAMR,cACnE,cAACyB,EAAA,EAAUC,KAAX,CAAgBC,QAAQ,OAAOC,MAAO,CAACC,OAAQ,OAA/C,SAAwDR,KAAKb,MAAMK,YACnE,cAACY,EAAA,EAAUC,KAAX,CAAgBC,QAAQ,OAAOC,MAAO,CAACC,OAAQ,OAA/C,SAAwDR,KAAKb,MAAMO,cAEpEM,KAAKb,MAAMS,SACZ,cAACa,EAAA,EAAD,CAAOC,IAAG,kGAA6FV,KAAKb,MAAMO,SAAxG,YAAoHM,KAAKb,MAAMK,UAA/H,YAAoJe,MAAO,CAAEI,MAAM,QAAUH,OAAO,OAASI,SAAO,WA/CtN,GAAyBC,aCOVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.521c8073.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ListGroup,Image  } from 'react-bootstrap';\n// import MapContaine from './MapContaine';\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: '',\n      longitude: '',\n      latitude: '',\n      display: false\n    }\n  }\n\n  nameChangeHandler = (e) => {\n    this.setState({\n      displayName: e.target.value\n    })\n  }\n  submitData = async (e) => {\n    e.preventDefault()\n    axios.get(`https://eu1.locationiq.com/v1/search.php?key=pk.aa7e1497cc88fec3b69a5efd60a76506&city=${this.state.displayName}&format=json`).then(axiosResponse =>{\n\n      this.setState({\n        displayName: axiosResponse.data[0].display_name,\n        longitude: axiosResponse.data[0].lon,\n        latitude: axiosResponse.data[0].lat,\n        display : true\n      })\n    }).catch(e=>{\n      alert(\"plz enter city name!\")\n    })\n  \n    \n  \n  }\n  render() {\n    return (\n      <>\n        <form onSubmit={this.submitData}>\n          <input type='text' placeholder='city name....' onChange={(e) => { this.nameChangeHandler(e) }} />\n          <button>Explore!</button>\n        </form>\n        < ListGroup>\n          <ListGroup.Item variant=\"dark\" style={{height: '4em'}}>{this.state.displayName}</ListGroup.Item>\n          <ListGroup.Item variant=\"dark\" style={{height: '4em'}}>{this.state.longitude}</ListGroup.Item>\n          <ListGroup.Item variant=\"dark\" style={{height: '4em'}}>{this.state.latitude}</ListGroup.Item>\n        </ListGroup>\n        {this.state.display &&\n        <Image src={`https://maps.locationiq.com/v3/staticmap?key=pk.aa7e1497cc88fec3b69a5efd60a76506&center=${this.state.latitude},${this.state.longitude}&zoom=10`} style={{ width:\"400px\" , height:\"400\" }} rounded/>\n         /* <MapContaine  lat={this.state.latitude} lon={this.state.longitude} /> */\n        }\n      </>\n     \n     \n    )\n  }\n}\n\nexport default App\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}